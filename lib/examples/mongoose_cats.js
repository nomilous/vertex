// Generated by CoffeeScript 1.6.3
var Kitten, kittySchema, mongoose, routes;

mongoose = require('mongoose').connect('mongodb://localhost/test');

kittySchema = mongoose.Schema({
  name: {
    type: String,
    index: {
      unique: true
    }
  }
});

Kitten = mongoose.model('Kitten', kittySchema);

require('../vertex')({
  listen: {
    port: 3001
  },
  api: {
    listen: {
      port: 3000
    },
    root: routes = {
      kittens: function(_arg, callback) {
        var api, body, id, method, query, rest;
        method = _arg.method, body = _arg.body, rest = _arg.rest, query = _arg.query, api = _arg.api;
        switch (method) {
          case 'POST':
            return Kitten.create(body, function(err, kitten) {
              if (err != null) {
                return callback(null, {
                  statusCode: 409,
                  error: err
                });
              }
              return callback(null, kitten);
            });
          case 'GET':
            if (id = rest.shift()) {
              return Kitten.findById(id, function(err, kitten) {
                if (err != null) {
                  return callback(null, {
                    statusCode: 400,
                    error: err
                  });
                }
                console.log({
                  K: kitten,
                  P: rest
                });
                if (kitten == null) {
                  callback(null, {
                    statusCode: 404
                  });
                }
                return callback(null, kitten);
              });
            }
            return Kitten.find(query, function(err, kittens) {
              if (err != null) {
                return callback(null, {
                  statusCode: 400,
                  error: err
                });
              }
              return callback(null, kittens);
            });
        }
      }
    }
  }
});

routes.kittens.$api = {
  paginate: 20
};
