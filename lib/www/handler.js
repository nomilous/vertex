// Generated by CoffeeScript 1.6.3
var Cache, Recursor, deferred, lastInstance, parse, pipeline, readFile, _ref;

parse = require('querystring').parse;

_ref = require('also'), pipeline = _ref.pipeline, deferred = _ref.deferred;

readFile = require('fs').readFile;

Recursor = require('./recursor');

Cache = require('./cache');

lastInstance = void 0;

module.exports._test = function() {
  return lastInstance;
};

module.exports.create = function(config) {
  var api, local;
  config || (config = {});
  config.www || (config.www = {});
  lastInstance = local = {
    root: config.root || {},
    recursor: Recursor.create(config),
    cache: Cache.create(config),
    prepare: deferred(function(action, opts) {
      return action.resolve();
    }),
    process: function(opts) {
      return local.recursor.process(opts);
    },
    responder: function(opts, res) {
      return local.prepare(opts).then(local.process(opts).then(function(result) {
        var body, _base;
        result.headers || (result.headers = {});
        body = result.body;
        if (result.headers['Content-Type'] == null) {
          body = JSON.stringify(body);
        }
        if (body != null) {
          (_base = result.headers)['Content-Type'] || (_base['Content-Type'] = 'application/json');
          result.headers['Content-Length'] = body.length;
        }
        res.writeHead(result.statusCode || 200, result.headers);
        if (body != null) {
          res.write(body);
        }
        return res.end();
      }, function(error) {
        res.writeHead(error.statusCode || 500, error.headers || {});
        return res.end(error.body || error.toString());
      }, function(notify) {}));
    },
    handle: function(req, res) {
      var body, eioClientScript, m, path, query, _ref1;
      path = req.url;
      try {
        _ref1 = req.url.match(/^(.*?)\?(.*)/), m = _ref1[0], path = _ref1[1], query = _ref1[2];
      } catch (_error) {}
      if (path === '/' && !config.www.allowRoot) {
        res.writeHead(404);
        return res.end();
      }
      if (path === '/engine.io.js') {
        res.writeHead(200, {
          'Content-Type': 'text/javascript'
        });
        eioClientScript = __dirname + '/../../node_modules/engine.io-client/engine.io.js';
        return readFile(eioClientScript, function(err, buf) {
          return res.end(buf.toString());
        });
      }
      body = '';
      req.on('data', function(chunk) {
        return body += chunk.toString();
      });
      return req.on('end', function() {
        var error;
        if (req.headers['content-type'] === 'application/json') {
          try {
            body = JSON.parse(body);
          } catch (_error) {
            error = _error;
            res.writeHead(500);
            res.write("JSON " + (error.toString()));
            return res.end();
          }
        }
        return local.responder({
          headers: req.headers,
          method: req.method,
          path: path,
          query: query != null ? parse(query) : {},
          body: body
        }, res);
      });
    }
  };
  return api = {
    handle: local.handle
  };
};
