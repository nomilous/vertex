// Generated by CoffeeScript 1.6.3
var Handler, http;

http = require('http');

Handler = require('./handler');

module.exports.create = function(config) {
  var local;
  return local = {
    server: void 0,
    handler: Handler.create(config).handle,
    status: {
      value: 'pending',
      at: new Date
    },
    listen: function(callback) {
      var hostname, listenArgs, port, server;
      if (!(function() {
        try {
          return listenArgs = config.api.listen;
        } catch (_error) {}
      })()) {
        return;
      }
      port = parseInt(listenArgs.port);
      hostname = listenArgs.hostname;
      local.server = server = http.createServer(function(req, res) {
        return local.handler(req, res);
      });
      server.on('error', function(error) {
        return console.log({
          ERROR: error
        });
      });
      return server.listen(port, hostname, function() {
        local.status.value = 'listening';
        local.status.at = new Date;
        return callback(null, local);
      });
    },
    close: function(callback) {
      try {
        return local.server.close(callback);
      } catch (_error) {}
    }
  };
};
