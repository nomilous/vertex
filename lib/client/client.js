// Generated by CoffeeScript 1.6.3
var Client;

Client = require('engine.io-client');

module.exports = function(config) {
  /*
  
  * `config.connect.uri` - websocket uri
  * `config.connect.interval` - retry interval for connect and reconnect
      * does not back off exponentially
  
  TODO: node-bunyan logger
  
      config.log.streams
      config.log.serializers
  */

  var local;
  return local = {
    socket: void 0,
    log: {
      info: function(message, objects) {
        return console.log({
          TODO: {
            'log.info': {
              message: message,
              objects: objects
            }
          }
        });
      }
    },
    status: {
      value: 'pending',
      at: new Date
    },
    connect: function() {
      var socket;
      if (local.socket != null) {
        return local.reconnect();
      }
      local.socket = socket = new Client.Socket(config.connect.uri);
      socket.on('error', function(err) {
        if ((err.description != null) && err.description.code === 'ECONNREFUSED') {
          return local.reconnect();
        }
      });
      return socket.on('close', function() {
        return local.reconnect();
      });
    },
    reconnecting: void 0,
    reconnect: function() {
      var interval;
      if (local.reconnecting != null) {
        return;
      }
      interval = ((function() {
        try {
          return config.connect.interval;
        } catch (_error) {}
      })()) || 1000;
      return local.reconnecting = setInterval((function() {
        return local.log.info('reconnecting');
      }), interval);
    },
    close: function() {}
  };
};
